
name: Deploy React App to Server

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18 # Specify the Node.js version you need
          cache: 'npm'

      - name: Connect to server and setup environment
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.THALIUMXCLONESSERVER_HOST }}
          username: ${{ secrets.THALIUMXCLONESSERVER_USER }}
          key: ${{ secrets.THALIUMXCLONESSERVER_SSH_KEY }}
          script: |
            echo "üîç Checking Docker..."
            if ! command -v docker >/dev/null 2>&1; then
              echo "üöß Docker not found. Installing..."
              sudo apt update
              sudo apt install -y                 ca-certificates                 curl                 gnupg                 lsb-release
              sudo mkdir -p /etc/apt/keyrings
              curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
              echo                 "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu                 $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
              sudo apt update
              sudo apt install -y docker-ce docker-ce-cli containerd.io
              sudo usermod -aG docker $USER
              echo "‚úÖ Docker installed."
            else
              echo "‚úÖ Docker is already installed."
              docker --version
            fi

            echo "üîç Checking Docker Compose..."
            if ! command -v docker-compose >/dev/null 2>&1; then
              echo "üöß Docker Compose not found. Installing..."
              sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
              echo "‚úÖ Docker Compose installed."
            else
              echo "‚úÖ Docker Compose is already installed."
              docker-compose --version
            fi

            echo "üîç Checking if Docker network 'thaliumxclones' exists..."
            if sudo docker network ls --format '{{.Name}}' | grep -wq "thaliumxclones"; then
              echo "‚úÖ Docker network 'thaliumxclones' already exists."
            else
              echo "‚ùå Docker network 'thaliumxclones' does NOT exist. Creating it now..."
              sudo docker network create thaliumxclones
              echo "‚úÖ Network 'thaliumxclones' created."
            fi

            echo "üìÅ Creating project folder structure"
            mkdir -p ~/thaliumxclones-frontend/{build,ssl,nginx}

            echo "üìÑ Writing docker-compose.yml"
            cat << 'EOF' > ~/thaliumxclones-frontend/docker-compose.yml
            ${{ vars.THALIUMXCLONESDOCKERCOMPOSERS }}
            EOF

            echo "üìÑ Writing Dockerfile"
            cat << 'EOF' > ~/thaliumxclones-frontend/Dockerfile
            ${{ vars.THALIUMXCLONESDOCKER }}
            EOF

            echo "üìÑ Writing template"
            cat << 'EOF' > ~/thaliumxclones-frontend/template
            ${{ vars.THALIUMXCLONESTEMPLATE }}
            EOF

      - name: Install dependencies
        run: |
          npm install

      - name: Build React app
        run: |
          export NODE_OPTIONS="--max-old-space-size=4096" # Increase memory if needed
          yarn build || npm run build

      - name: List build folder for debug
        run: ls -la build

      - name: Copy build folder to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.THALIUMXCLONESSERVER_HOST }}
          username: ${{ secrets.THALIUMXCLONESSERVER_USER }}
          key: ${{ secrets.THALIUMXCLONESSERVER_SSH_KEY }}
          source: "build"
          target: "~/thaliumxclones-frontend"

      - name: Restart Docker containers
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.THALIUMXCLONESSERVER_HOST }}
          username: ${{ secrets.THALIUMXCLONESSERVER_USER }}
          key: ${{ secrets.THALIUMXCLONESSERVER_SSH_KEY }}
          script: |
            cd ~/thaliumxclones-frontend
            echo "üõë Stopping containers..."
            sudo docker-compose -f docker-compose.yml down

            echo "üöÄ Starting containers..."
            sudo docker-compose -f docker-compose.yml up --build -d

            echo "‚úÖ Docker containers restarted."
